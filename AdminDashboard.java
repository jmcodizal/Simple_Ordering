
package UI;

import DB.Database;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import UI.Front;
import javax.swing.JOptionPane;
/**
 *
 * @author jessa
 */
public class AdminDashboard extends javax.swing.JFrame {
Connection conn;
PreparedStatement pst;
ResultSet rst;

    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard() {
        initComponents();
         Database mycon = new Database();
        conn = Database.getCon();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        RoundButton = new javax.swing.JButton();
        ConcatButton = new javax.swing.JButton();
        lengthButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jButton1 = new javax.swing.JButton();
        CountButton = new javax.swing.JButton();
        AVGTPButton = new javax.swing.JButton();
        AVGPButton = new javax.swing.JButton();
        MAXTPButton = new javax.swing.JButton();
        MINTPButton = new javax.swing.JButton();
        MAXPButton = new javax.swing.JButton();
        MINPButton = new javax.swing.JButton();
        SUMTPButton = new javax.swing.JButton();
        TotalOrdersButton = new javax.swing.JButton();
        TNOButtton = new javax.swing.JButton();
        AOVButton = new javax.swing.JButton();
        MEPButton = new javax.swing.JButton();
        LEPButton = new javax.swing.JButton();
        TOPPButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        ExitButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\jessa\\OneDrive\\Desktop\\FurnitureOrderingSystem\\Screenshot 2025-02-09 065752.png")); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 153, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 630));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, -1, -1));
        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 120, -1, -1));
        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 80, -1, -1));
        getContentPane().add(jTabbedPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 170, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Scalar and Aggregate"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, -1, -1));

        RoundButton.setText("Total Prices");
        RoundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoundButtonActionPerformed(evt);
            }
        });
        getContentPane().add(RoundButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, -1, -1));

        ConcatButton.setText("Full Name of Customers");
        ConcatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConcatButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ConcatButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 170, -1));

        lengthButton.setText("Email Characters");
        lengthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lengthButtonActionPerformed(evt);
            }
        });
        getContentPane().add(lengthButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, -1, -1));
        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 210, -1, -1));

        jButton1.setText("CLEAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 550, -1, -1));

        CountButton.setText("Number of Customer");
        CountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountButtonActionPerformed(evt);
            }
        });
        getContentPane().add(CountButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, -1, -1));

        AVGTPButton.setText("AVERAGE Total Price");
        AVGTPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AVGTPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AVGTPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, -1, -1));

        AVGPButton.setText("AVERAGE Price");
        AVGPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AVGPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AVGPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, -1, 20));

        MAXTPButton.setText("MAX Total Price");
        MAXTPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAXTPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(MAXTPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, -1, 30));

        MINTPButton.setText("MIN Total Price");
        MINTPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MINTPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(MINTPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 140, 120, -1));

        MAXPButton.setText("MAX Price");
        MAXPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAXPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(MAXPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, -1, -1));

        MINPButton.setText("MIN Price");
        MINPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MINPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(MINPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 350, -1, -1));

        SUMTPButton.setText("SUM Total Price");
        SUMTPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUMTPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(SUMTPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 170, -1, -1));

        TotalOrdersButton.setText("Total Numbers of Orders");
        TotalOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalOrdersButtonActionPerformed(evt);
            }
        });
        getContentPane().add(TotalOrdersButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 200, -1, 30));

        TNOButtton.setText("Total Orders per Customer");
        TNOButtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TNOButttonActionPerformed(evt);
            }
        });
        getContentPane().add(TNOButtton, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 240, -1, 30));

        AOVButton.setText("Average Order Value");
        AOVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AOVButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AOVButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 280, -1, 30));

        MEPButton.setText("Most Expensive Product");
        MEPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(MEPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 320, -1, 30));

        LEPButton.setText("Least Expensive Product");
        LEPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LEPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(LEPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 360, -1, 30));

        TOPPButton.setText("Total Orders Per Product");
        TOPPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TOPPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(TOPPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 400, 170, -1));

        jPanel2.setBackground(new java.awt.Color(255, 153, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 0, 180, 630));

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ExitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 550, -1, -1));

        jButton2.setText("Delete Least Expensive");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 550, -1, -1));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 500, -1, -1));

        jButton3.setText("View Products");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 550, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\jessa\\OneDrive\\Desktop\\FurnitureOrderingSystem\\Screenshot 2025-02-09 065752.png")); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RoundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoundButtonActionPerformed
        String sql = "SELECT ROUND(TotalPrice, 2) FROM orders";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getDouble(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    }
    }//GEN-LAST:event_RoundButtonActionPerformed

    private void ConcatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConcatButtonActionPerformed
        String sql = "SELECT CONCAT(FirstName, ' ', LastName) AS FullName FROM customer";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getString(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_ConcatButtonActionPerformed

    private void lengthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lengthButtonActionPerformed
        String sql = "SELECT LENGTH(email) FROM customer";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getInt(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_lengthButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
       
       while(model.getRowCount() > 0){
           for(int i = 0 ; i < model.getRowCount(); i++){
           model.removeRow(0);
       }
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountButtonActionPerformed
       String sql = "SELECT COUNT(*) FROM customer";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getInt(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_CountButtonActionPerformed

    private void AVGTPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AVGTPButtonActionPerformed
         String sql = "SELECT AVG(TotalPrice) FROM orders";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getDouble(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_AVGTPButtonActionPerformed

    private void AVGPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AVGPButtonActionPerformed
        String sql = "SELECT AVG(Price) FROM product";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getDouble(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_AVGPButtonActionPerformed

    private void MAXPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAXPButtonActionPerformed
        String sql = "SELECT MAX(Price) FROM product";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getDouble(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_MAXPButtonActionPerformed

    private void MINPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MINPButtonActionPerformed
        String sql = "SELECT MIN(Price) FROM product";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getDouble(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_MINPButtonActionPerformed

    private void MAXTPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAXTPButtonActionPerformed
        String sql = "SELECT MAX(TotalPrice) FROM orders";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getDouble(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_MAXTPButtonActionPerformed

    private void MINTPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MINTPButtonActionPerformed
       String sql = "SELECT MIN(TotalPrice) FROM orders";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getDouble(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_MINTPButtonActionPerformed

    private void SUMTPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUMTPButtonActionPerformed
         String sql = "SELECT SUM(TotalPrice) FROM orders";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getDouble(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_SUMTPButtonActionPerformed

    private void TotalOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalOrdersButtonActionPerformed
      String sql = "SELECT SUM(Quantity) FROM orders";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getInt(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_TotalOrdersButtonActionPerformed

    private void TNOButttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TNOButttonActionPerformed
        String sql = "SELECT CONCAT(UPPER(UserName), ': ', SUM(Quantity)) AS total_orders FROM orders GROUP BY UserName";
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getString("total_orders")});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_TNOButttonActionPerformed

    private void AOVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AOVButtonActionPerformed
      String sql = "SELECT ROUND(AVG(TotalPrice), 2) AS AvgOrder FROM orders";

        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getDouble(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_AOVButtonActionPerformed

    private void MEPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEPButtonActionPerformed
        String sql = "SELECT UPPER(ProductName) AS MostExpensiveProduct FROM product WHERE Price = (SELECT MAX(Price) FROM product)"; 
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getString(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_MEPButtonActionPerformed

    private void LEPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LEPButtonActionPerformed
        String sql = "SELECT UPPER(ProductName) AS LeastExpensiveProduct FROM product WHERE Price = (SELECT MIN(Price) FROM product)"; 
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getString(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_LEPButtonActionPerformed

    private void TOPPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TOPPButtonActionPerformed
         String sql = "SELECT CONCAT(UPPER(ProductName), ': ', SUM(Quantity)) AS total_orders FROM orders GROUP BY ProductName;";
try {
    PreparedStatement pst = conn.prepareStatement(sql);
    ResultSet rst = pst.executeQuery();

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Clear previous data

    while (rst.next()) {
        String totalOrders = rst.getString("total_orders"); // Get formatted total orders
        model.addRow(new Object[]{totalOrders}); // Add to JTable
    }

    model.fireTableDataChanged(); // Refresh JTable
} catch (SQLException ex) {
    System.out.println("Error: " + ex.getMessage());
}
    }//GEN-LAST:event_TOPPButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        Front obj = new Front();
        setVisible(true);
        dispose();
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       String sql = "DELETE FROM product WHERE Price = (SELECT MIN(Price) FROM product)"; 
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            JOptionPane.showMessageDialog(null, "Deleted!");
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String sql = "SELECT (ProductName) FROM product"; 
        try{
           PreparedStatement pst = conn.prepareStatement(sql);
           ResultSet rst = pst.executeQuery();
           DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           while(rst.next()){
               model.addRow(new Object[]{rst.getString(1)});
           }
    } catch (SQLException ex) {
        System.out.println("Error : " +ex.getMessage());
    } 
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AOVButton;
    private javax.swing.JButton AVGPButton;
    private javax.swing.JButton AVGTPButton;
    private javax.swing.JButton ConcatButton;
    private javax.swing.JButton CountButton;
    private javax.swing.JButton ExitButton;
    private javax.swing.JButton LEPButton;
    private javax.swing.JButton MAXPButton;
    private javax.swing.JButton MAXTPButton;
    private javax.swing.JButton MEPButton;
    private javax.swing.JButton MINPButton;
    private javax.swing.JButton MINTPButton;
    private javax.swing.JButton RoundButton;
    private javax.swing.JButton SUMTPButton;
    private javax.swing.JButton TNOButtton;
    private javax.swing.JButton TOPPButton;
    private javax.swing.JButton TotalOrdersButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton lengthButton;
    // End of variables declaration//GEN-END:variables
}
